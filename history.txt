NOTAS RESUMEN
agregando rama02
    git branch rama02
para cambiar a la rama02 
    git checkout rama02
rama listar 
    git branch
rama subir
    git push origin arreglo001
variables de git
    git config -l
crear llave ssh
    ssh-keygen -t rsa -b 4096 -C "yfsanchez@gmail.com"
    en github configuracion agregar llave ssh, se agrega la llave publica nunca la privada
cambiar remote a ssh    
    git remote -v
    git remote set-url origin git@github.com:YordayFigueroaSanchez/platzi-git.git
    git remote -v
arbol en el repositorio
    git log --all --graph --decorate --oneline
    alias arbolito="git log --all --graph --decorate --oneline"
tag crear
    git tag -a v0.1 -m "version 0.1" 2bd7202
tag listar
    git tag
tag listar con commit
    git show-ref --tags
tag publicar en repositorio
    git push origin --tags
tag Borrar del repositorio remoto: 
    git tag -d nombre-del-tag 
    git push origin :refs/tags/nombre-del-tag
fork

readme.md

rebase (mala practica)
    rebase desde la rama particular para traer los cambios de la master
    rebase desde master para traer los cambios de la rama particular
    se crea rama experimento
    se agrega commit en master
    se agrega commit en experimento
    se agrega otro commit en experimento
    se agrega commit en master
    en la rama experimento (rebase master)
    en la rama master (rebase experimento)
stash
    git stash : Guarda el trabajo actual de manera temporal. (Archivos modificados o eliminados)
    git stash -u : Crea un stash con todos los archivos. (Añadiendo los creados Untracked)
    git stash save “mensaje” : Crea un stash con el mensaje especificado.
    git stash list : Permite visualizar todos los stash existentes.
    git stash clear : Elimina todos los stash existentes.
    git stash drop : Elimina el stash más reciente. El que tiene num_stash=0.
    git stash drop stash@{num_stash} : Elimina un stash específico.
    git stash apply : Aplica el stash más reciente. El que tiene num_stash=0.
    git stash apply stash@{num_stash} : Aplica los cambios de un stash específico.
    git stash pop : Aplica el stash más reciente y lo elimina. El que tiene num_stash=0.
    git stash pop stash@{num_stash} : Aplica los cambios de un stash específico y elimina lo stash.
    git stash branch nombre_de_rama : Crea una rama y aplica el stash mas reciente.
    git stash branch nombre_de_rama stash@{num_stash} : Crea una rama y aplica el stash especificado.
clean
    git clean --dry-run (vista previa)
    git clean -f
cherry-pick (mala )
    desde la rama donde llega el commit
    git cherry-pick <numero del commit>
reconstruir commit
    despues de hacer el commit nos percatamos que falta algo mas
    --amend
    git add 
    git commit --amend
reset reflog (mala practica)
    resetea al has que tomemos de (git reflog)
buscar archivos y en commits
    git grep -n color (numero de linea)
    git grep -c color (contar)

    git log -S "cabeza" (buscar en commit)
comandos y recursos colaborativos
    git shortlog -sn = muestra cuantos commit han hecho cada miembros del equipo.
    git shortlog -sn --all = muestra cuantos commit han hecho cada miembros del equipo hasta los que han sido eliminado
    git shortlog -sn --all --no-merge = muestra cuantos commit han hecho cada miembros quitando los eliminados sin los merges
    git blame ARCHIVO = muestra quien hizo cada cosa linea por linea
    git COMANDO --help = muestra como funciona el comando.
    git blame history.txt -L35,50= muestra quien hizo cada cosa linea por linea indicándole desde que linea ver ejemplo -L35,50
    git branch -r **= se muestran todas las ramas remotas
    git branch -a = se muestran todas las ramas tanto locales como remotas

readme.md
    editor online
    https://pandao.github.io/editor.md/en.html




********************************************************************************

Mi nombre es yfs
estudio para agregar herramientas
otra linea en la historia

agreganfo info para conflicto con la rama02
agregando rama02
    git branch rama02
para cambiar a la rama02 
    git checkout rama02

agregando rama03
    git branch rama03, agregando en el master
github
    git remote add origin https://github.com/YordayFigueroaSanchez/platzi-git.git
    git remote -v 
    git push origin master
    git remote add main https://github.com/YordayFigueroaSanchez/platzi-git.git
    git pull origin main --allow-unrelated-histories

    git push origin master:main
agregrado en github
    test01

variables de git
    git config -l

crear llave ssh
    ssh-keygen -t rsa -b 4096 -C "yfsanchez@gmail.com"
    use la llave creada para el git de geocom
comprobar proceso y agregar llave
    eval $(ssh-agent -s)
    ssh-add ~/.ssh/id_rsa

cambiar remote a ssh    
    git remote -v
    git remote set-url origin git@github.com:YordayFigueroaSanchez/platzi-git.git
    git remote -v

siempre actualizar el repositorio
    git pull origin master

test de cambio

************************
stash test
    stash 002
    stash 001
************************
test
test02
